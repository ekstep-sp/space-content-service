/*               "Copyright 2020 Infosys Ltd.
               Use of this source code is governed by GPL v3 license that can be found in the LICENSE file or at https://opensource.org/licenses/GPL-3.0
               This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3" */
/*               "Copyright 2020 Infosys Ltd.
               Use of this source code is governed by GPL v3 license that can be found in the LICENSE file or at https://opensource.org/licenses/GPL-3.0
               This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3" */
/*               "Copyright 2020 Infosys Ltd.
               Use of this source code is governed by GPL v3 license that can be found in the LICENSE file or at https://opensource.org/licenses/GPL-3.0
               This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3" */
const express = require('express');
const router = express.Router();
/**
 * This will serve the access token for a user
 */
const accessTokenUtil = require('./accessTokenUtil');

/**
 * @apiDescription This API will get the access token for a user using the code generated by O365 login OAuth grant flow.
 *
 * @api {get} /access-token Request User access token
 * @apiName GetAccessToken
 * @apiGroup AccessToken
 * @apiParam (Query string) {String} email user email
 *
 * @apiSuccess {String} accessToken Access token of the user for Microsoft O365
 * @apiSuccess {String} tokenTpe Access token type
 * @apiSuccess {String} resource Resource for which the access token was generated for
 * @apiSuccess {String} expiresOn Unix expiry time in seconds
 * @apiSuccessExample Success response:
 * 	HTTPS 200 OK
 * 	{
		"accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImlCakwxUmNxemhpeTRmcHhJeGRacW9oTTJZayIsImtpZCI6ImlCakwxUmNxemhpeTRmcHhJeGRacW9oTTJZayJ9.eyJhdWQiOiJodHRwczovL2luZm9zeXN0ZWNobm9sb2dpZXMuc2hhcmVwb2ludC5jb20vIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNjNjZTdkNTktMmYzZS00MmNkLWE4Y2MtYmU3NjRjZmY1ZWI2LyIsImlhdCI6MTUyNTYxNzQ2MywibmJmIjoxNTI1NjE3NDYzLCJleHAiOjE1MjU2MjEzNjMsImFjciI6IjEiLCJhaW8iOiJBU1FBMi84SEFBQUFGT01odmVHeDFBT3B3VkJ6VC9CSVJpb1g1Rks2NXUrSW82Z1ZiMWhFcC9FPSIsImFtciI6WyJ3aWEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiTEVYIiwiYXBwaWQiOiJjNjU5N2QwYi1jNjI5LTQ4ODUtYTUzYy00NDQ5MDY0M2RkZGEiLCJhcHBpZGFjciI6IjEiLCJmYW1pbHlfbmFtZSI6IlNhaSBBYmhpc2hlayBHb3Z1bGEiLCJnaXZlbl9uYW1lIjoiTmFnYSIsImluX2NvcnAiOiJ0cnVlIiwiaXBhZGRyIjoiMTIyLjE1LjE1Ni43MCIsIm5hbWUiOiJOYWdhIFNhaSBBYmhpc2hlayBHb3Z1bGEiLCJvaWQiOiI0YzM3NDUzMi05MDMxLTQ4MmYtYjE2Yy0wODM2NzRkNmNmMDAiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjY2NzQ5OTQwLTE2Mzc5NjQ0NDQtOTI5NzAxMDAwLTIxNjgxNTUiLCJwdWlkIjoiMTAwMzNGRkY5MEIwOTRBNSIsInNjcCI6IkFsbFNpdGVzLldyaXRlIEZpbGVzLlJlYWQuQWxsIFVzZXIuUmVhZC5BbGwiLCJzaWduaW5fc3RhdGUiOlsiaW5rbm93bm50d2siXSwic3ViIjoiTUR6d2dFVVJmOEs2QzJQV0dRR2Z2RGM3SERQOWljVllLV3Zla3pHb1M4USIsInRpZCI6IjYzY2U3ZDU5LTJmM2UtNDJjZC1hOGNjLWJlNzY0Y2ZmNWViNiIsInVuaXF1ZV9uYW1lIjoiTmFnYXNhaV9Hb3Z1bGFAYWQuaW5mb3N5cy5jb20iLCJ1cG4iOiJOYWdhc2FpX0dvdnVsYUBhZC5pbmZvc3lzLmNvbSIsInV0aSI6IkNqb3hZMW1sd2tDR1MwWFVhY0lPQUEiLCJ2ZXIiOiIxLjAifQ.Hle6KqN4Flq31xb-9JDP0wDO4Iwd7FQi9cPhZdk-6tuxUcyneOTUnmqYlqINBkH5Zo38JeLkP46tce9vo-ISrDVNtNvyakovDYkglK1mTYKUmm0O5fXYn_pQPqrt5TTDHNsEOI-hJYoHV4SMQH_WW-v1hG6LWX6xa0ui6kID-bxOCxeL8f6uVb7D0k5x-Y6yd0DGX4MaB6vTNLE79m5uWX2wGk5eyeloNBjSBQLKH29EsKb2BKcR7Vt8myFEdRK_0qJ7mRzs2r0JwCtDXHbL_bxc72jpwLY7hJsqF0_E0-Gj1zmVaZ7jHVE-U1fDD8mjsKDz18k9B0WVDCgiry5XxQ",
		"tokenType": "Bearer",
		"resource": "https://infosystechnologies.sharepoint.com/",
		"expiresOn": "1525621363"
	}

 *  @apiError (Response Error) NotFound:404 The Access token for this user is not found.
 *  @apiErrorExample Error-Response: 404
 *     HTTP/1.1 404 Not Found
 *     {
 *       "error": "Access token of the user does not exist"
 *     }
 *  @apiError (Response Error) InternalServerError:500 Server error while processing the request
 *  @apiErrorExample Error-Response: 500
 *     HTTP/1.1 500 Not Found
 *     {
 *       "error": "Internal Server Error"
 *     }
 */
router.get('/access-token', function (req, res) {
	accessTokenUtil.getAccessToken(req.query.email, function (err, accessToken) {
		if (err) {
			if (err.code) {
				res.status(err.code).send({
					'error': err.err
				});
			} else {
				res.status(500).send({
					'error': 'Internal Server error'
				});
			}
		} else {
			if (accessToken) {
				res.send(accessToken);
			} else {
				res.status(500).send({
					'error': 'Problem while fetching the access token'
				});
			}
		}
	});
});


/**
 * @apiDescription This API will get the access token for a user using the code generated by O365 login OAuth grant flow.
 *
 * @api {get} /user-access-token Request Access token from code
 * @apiName GetAccessTokenFromCode
 * @apiGroup AccessToken
 * @apiParam (Query string) {String} code Auth code generated after the successful login
 * @apiParam (Query string) {String} redirecturi Redirect URI used to generate the access token (Needed for O365)
 *
 * @apiSuccess {String} accessToken Access token of the user for Microsoft O365
 * @apiSuccess {String} tokenTpe Access token type
 * @apiSuccess {String} resource Resource for which the access token was generated for
 * @apiSuccess {String} expiresOn Unix expiry time in seconds
 * @apiSuccessExample Success response:
 * 	HTTPS 200 OK
 * 	{
		"accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImlCakwxUmNxemhpeTRmcHhJeGRacW9oTTJZayIsImtpZCI6ImlCakwxUmNxemhpeTRmcHhJeGRacW9oTTJZayJ9.eyJhdWQiOiJodHRwczovL2luZm9zeXN0ZWNobm9sb2dpZXMuc2hhcmVwb2ludC5jb20vIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNjNjZTdkNTktMmYzZS00MmNkLWE4Y2MtYmU3NjRjZmY1ZWI2LyIsImlhdCI6MTUyNTYxNzQ2MywibmJmIjoxNTI1NjE3NDYzLCJleHAiOjE1MjU2MjEzNjMsImFjciI6IjEiLCJhaW8iOiJBU1FBMi84SEFBQUFGT01odmVHeDFBT3B3VkJ6VC9CSVJpb1g1Rks2NXUrSW82Z1ZiMWhFcC9FPSIsImFtciI6WyJ3aWEiXSwiYXBwX2Rpc3BsYXluYW1lIjoiTEVYIiwiYXBwaWQiOiJjNjU5N2QwYi1jNjI5LTQ4ODUtYTUzYy00NDQ5MDY0M2RkZGEiLCJhcHBpZGFjciI6IjEiLCJmYW1pbHlfbmFtZSI6IlNhaSBBYmhpc2hlayBHb3Z1bGEiLCJnaXZlbl9uYW1lIjoiTmFnYSIsImluX2NvcnAiOiJ0cnVlIiwiaXBhZGRyIjoiMTIyLjE1LjE1Ni43MCIsIm5hbWUiOiJOYWdhIFNhaSBBYmhpc2hlayBHb3Z1bGEiLCJvaWQiOiI0YzM3NDUzMi05MDMxLTQ4MmYtYjE2Yy0wODM2NzRkNmNmMDAiLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtMjY2NzQ5OTQwLTE2Mzc5NjQ0NDQtOTI5NzAxMDAwLTIxNjgxNTUiLCJwdWlkIjoiMTAwMzNGRkY5MEIwOTRBNSIsInNjcCI6IkFsbFNpdGVzLldyaXRlIEZpbGVzLlJlYWQuQWxsIFVzZXIuUmVhZC5BbGwiLCJzaWduaW5fc3RhdGUiOlsiaW5rbm93bm50d2siXSwic3ViIjoiTUR6d2dFVVJmOEs2QzJQV0dRR2Z2RGM3SERQOWljVllLV3Zla3pHb1M4USIsInRpZCI6IjYzY2U3ZDU5LTJmM2UtNDJjZC1hOGNjLWJlNzY0Y2ZmNWViNiIsInVuaXF1ZV9uYW1lIjoiTmFnYXNhaV9Hb3Z1bGFAYWQuaW5mb3N5cy5jb20iLCJ1cG4iOiJOYWdhc2FpX0dvdnVsYUBhZC5pbmZvc3lzLmNvbSIsInV0aSI6IkNqb3hZMW1sd2tDR1MwWFVhY0lPQUEiLCJ2ZXIiOiIxLjAifQ.Hle6KqN4Flq31xb-9JDP0wDO4Iwd7FQi9cPhZdk-6tuxUcyneOTUnmqYlqINBkH5Zo38JeLkP46tce9vo-ISrDVNtNvyakovDYkglK1mTYKUmm0O5fXYn_pQPqrt5TTDHNsEOI-hJYoHV4SMQH_WW-v1hG6LWX6xa0ui6kID-bxOCxeL8f6uVb7D0k5x-Y6yd0DGX4MaB6vTNLE79m5uWX2wGk5eyeloNBjSBQLKH29EsKb2BKcR7Vt8myFEdRK_0qJ7mRzs2r0JwCtDXHbL_bxc72jpwLY7hJsqF0_E0-Gj1zmVaZ7jHVE-U1fDD8mjsKDz18k9B0WVDCgiry5XxQ",
		"tokenType": "Bearer",
		"resource": "https://infosystechnologies.sharepoint.com/",
		"expiresOn": "1525621363"
	}

 *  @apiError (Response Error) NotFound:404 The Access token for this user is not found.
 *  @apiErrorExample Error-Response: 404
 *     HTTP/1.1 404 Not Found
 *     {
 *       "error": "Access token of the user does not exist"
 *     }
 *  @apiError (Response Error) InternalServerError:500 Server error while processing the request
 *  @apiErrorExample Error-Response: 500
 *     HTTP/1.1 500 Not Found
 *     {
 *       "error": "Internal Server Error"
 *     }
 */
router.get('/user-access-token', function (req, res) {
	accessTokenUtil.generateAndSaveAccessTokenFromCode(req.query.code, req.query.redirecturi, function (err, result) {
		if (err) {
			console.error('Error while fetching the access token for this user', err);//eslint-disable-line
			res.status(500).send({
				'error': 'Internal Server error',
				err: err
			});
		} else {
			if (result) {
				res.send(result);
			} else {
				res.status(500).send({
					'error': 'Problem while fetching the access token'
				});
			}
		}
	});
});

module.exports = router;
